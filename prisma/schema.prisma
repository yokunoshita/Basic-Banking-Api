// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id           Int           @id @default(autoincrement())
  name         String
  email        String
  password     String
  profiles     Profile?
  bank_account BankAccount[]

  @@map("users")
}

model Profile {
  id              Int    @id @default(autoincrement())
  identity_type   String
  identity_number String
  address         String
  users           Users? @relation(fields: [user_id], references: [id])
  user_id         Int?   @unique

  @@map("profiles")
}

model BankAccount {
  id                  Int            @id @default(autoincrement())
  bank_name           String
  bank_account_number String
  balance             Float
  users               Users?         @relation(fields: [users_id], references: [id])
  users_id            Int?
  sender              Transactions[] @relation(name: "sender")
  receiver            Transactions[] @relation(name: "receiver")

  @@map("bank_accounts")
}

model Transactions {
  id                     Int          @id @default(autoincrement())
  amount                 Float
  source_account_id      Int?
  destination_account_id Int?
  source_account         BankAccount? @relation(name: "sender", fields: [source_account_id], references: [id])
  destination_account    BankAccount? @relation(name: "receiver", fields: [destination_account_id], references: [id])

  @@map("transactions")
}
